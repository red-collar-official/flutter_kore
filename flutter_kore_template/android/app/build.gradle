plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    ndkVersion flutter.ndkVersion

    namespace "com.example.flutter_kore_template"

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.flutter_kore_template"
        minSdkVersion 26
        targetSdkVersion flutter.targetSdkVersion
        compileSdk flutter.compileSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        ndkVersion = "27.0.12077973"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_21
        targetCompatibility JavaVersion.VERSION_21
    }

    kotlin {
        jvmToolchain(21)
    }

    // signingConfigs {
    //     release {
    //         keyAlias keystoreProperties['keyAlias']
    //         keyPassword keystoreProperties['keyPassword']
    //         storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
    //         storePassword keystoreProperties['storePassword']
    //     }
    // }

    flavorDimensions = ["flavors"]

    productFlavors {
        def debugSigningConfig = signingConfigs.debug
        // def releaseSigningConfig = signingConfigs.release

        basic {
            dimension "flavors"
            signingConfig debugSigningConfig
        }
        googleplay {
            dimension "flavors"
            signingConfig debugSigningConfig
            // signingConfig releaseSigningConfig
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {}
